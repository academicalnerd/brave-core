diff --git a/chrome/android/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java b/chrome/android/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
index f40a9967d7429afb73bf455055370049b028c910..01131e61aeb80062ec5d6ccc318adc2cf6284441 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
@@ -407,6 +407,7 @@ public class ToolbarPhone extends ToolbarLayout implements OnClickListener, TabC
         if (mCurrentLocationBarColor == color) return;
         mCurrentLocationBarColor = color;
         mLocationBarBackground.setColorFilter(color, PorterDuff.Mode.SRC_IN);
+        org.chromium.base.BraveReflectionUtil.InvokeMethod(BraveToolbarLayout.class, this, "updateModernLocationBarColorImpl", int.class, color);
     }
 
     /**
@@ -526,6 +527,7 @@ public class ToolbarPhone extends ToolbarLayout implements OnClickListener, TabC
                         EventConstants.PARTNER_HOME_PAGE_BUTTON_PRESSED);
             }
         }
+        org.chromium.base.BraveReflectionUtil.InvokeMethod(BraveToolbarLayout.class, this, "onClickImpl", View.class, v);
     }
 
     @Override
@@ -695,6 +697,7 @@ public class ToolbarPhone extends ToolbarLayout implements OnClickListener, TabC
      * @return The right bounds of the location bar after accounting for any visible left buttons.
      */
     private int getBoundsAfterAccountingForRightButtons() {
+        if (true) return Math.max(mToolbarSidePadding, (int) org.chromium.base.BraveReflectionUtil.InvokeMethod(BraveToolbarLayout.class, this, "getBoundsAfterAccountingForRightButtons", ViewGroup.class, mToolbarButtonsContainer));
         return Math.max(mToolbarSidePadding, mToolbarButtonsContainer.getMeasuredWidth());
     }
 
@@ -2124,6 +2127,7 @@ public class ToolbarPhone extends ToolbarLayout implements OnClickListener, TabC
         } else {
             populateUrlClearFocusingAnimatorSet(animators);
         }
+        org.chromium.base.BraveReflectionUtil.InvokeMethod(BraveToolbarLayout.class, this, "populateUrlAnimatorSet", boolean.class, hasFocus, int.class, URL_FOCUS_TOOLBAR_BUTTONS_DURATION_MS, int.class, URL_CLEAR_FOCUS_TABSTACK_DELAY_MS, List.class, animators);
         mUrlFocusLayoutAnimator = new AnimatorSet();
         mUrlFocusLayoutAnimator.playTogether(animators);
 
